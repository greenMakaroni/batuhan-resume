/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
*/
import React, { useEffect, useRef } from 'react'
import { useGLTF, useAnimations } from '@react-three/drei'

export function Neural_network(props) {
  const group = useRef()
  const { nodes, materials, animations } = useGLTF('./neural_network.glb')
  const { actions } = useAnimations(animations, group)
  
  useEffect(() => {
    for (const [key, value] of Object.entries(actions)) {
      actions[`${key}`].play()
    }
  }, [])

  return (
    <group ref={group} {...props} position={[0,0,7]} dispose={null} scale={1.4}>
      <group name="Scene">
        <mesh name="Sphere008" geometry={nodes.Sphere008.geometry} material={materials.neuron} position={[-0.01, -0.35, 0.02]} />
        <mesh name="Sphere001" geometry={nodes.Sphere001.geometry} material={materials.neuron} position={[7.13, -0.35, 0.02]} />
        <mesh name="Sphere002" geometry={nodes.Sphere002.geometry} material={materials.neuron} position={[-6.99, -0.35, 0.02]} />
        <mesh name="Sphere003" geometry={nodes.Sphere003.geometry} material={materials.neuron} position={[-7.07, -0.35, -7.16]} />
        <mesh name="Sphere004" geometry={nodes.Sphere004.geometry} material={materials.neuron} position={[-0.01, -0.35, -7.2]} />
        <mesh name="Sphere005" geometry={nodes.Sphere005.geometry} material={materials.neuron} position={[6.92, -0.35, -7.12]} />
        <mesh name="Sphere006" geometry={nodes.Sphere006.geometry} material={materials.neuron} position={[-7.07, -0.35, -14.05]} />
        <mesh name="Sphere007" geometry={nodes.Sphere007.geometry} material={materials.neuron} position={[-0.01, -0.35, -14.09]} />
        <mesh name="Sphere009" geometry={nodes.Sphere009.geometry} material={materials.neuron} position={[6.92, -0.35, -14.01]} />
        <mesh name="Cube001" geometry={nodes.Cube001.geometry} material={materials.input} position={[-6.31, -0.71, -14.02]} scale={0} />
        <mesh name="Cube002" geometry={nodes.Cube002.geometry} material={materials.input} position={[-6.45, -0.71, -13.52]} rotation={[0, -Math.PI / 4, 0]} scale={0} />
        <mesh name="Cube003" geometry={nodes.Cube003.geometry} material={materials.input} position={[-7.01, -0.71, -13.17]} rotation={[0, -1.1, 0]} scale={0} />
        <mesh name="Cube004" geometry={nodes.Cube004.geometry} material={materials.input} position={[-6.46, -0.71, -7.76]} rotation={[0, Math.PI / 4, 0]} scale={0} />
        <mesh name="Cube005" geometry={nodes.Cube005.geometry} material={materials.input} position={[-6.27, -0.71, -7.07]} scale={0} />
        <mesh name="Cube006" geometry={nodes.Cube006.geometry} material={materials.input} position={[-6.71, -0.71, -6.63]} rotation={[0, -Math.PI / 4, 0]} scale={0} />
        <mesh name="Cube007" geometry={nodes.Cube007.geometry} material={materials.input} position={[-6.2, -0.71, 0.05]} scale={0} />
        <mesh name="Cube008" geometry={nodes.Cube008.geometry} material={materials.input} position={[-6.77, -0.71, -0.21]} rotation={[0, Math.PI / 4, 0]} scale={0} />
        <mesh name="Cube009" geometry={nodes.Cube009.geometry} material={materials.input} position={[-7.01, -0.57, -0.68]} rotation={[0, 1.08, 0]} scale={0} />
        <mesh name="Cube010" geometry={nodes.Cube010.geometry} material={materials.input} position={[0.7, -0.6, -14]} scale={0} />
        <mesh name="Cube011" geometry={nodes.Cube011.geometry} material={materials.input} position={[0.6, -0.71, -13.72]} rotation={[0, -Math.PI / 4, 0]} scale={0} />
        <mesh name="Cube012" geometry={nodes.Cube012.geometry} material={materials.input} position={[0.07, -0.71, -13.29]} rotation={[0, -1.1, 0]} scale={0} />
        <mesh name="Cube013" geometry={nodes.Cube013.geometry} material={materials.input} position={[0.46, -0.71, -7.76]} rotation={[0, Math.PI / 4, 0]} scale={0} />
        <mesh name="Cube014" geometry={nodes.Cube014.geometry} material={materials.input} position={[0.64, -0.71, -7.07]} scale={0} />
        <mesh name="Cube015" geometry={nodes.Cube015.geometry} material={materials.input} position={[0.2, -0.71, -6.63]} rotation={[0, -Math.PI / 4, 0]} scale={0} />
        <mesh name="Cube016" geometry={nodes.Cube016.geometry} material={materials.input} position={[0.8, -0.71, 0.24]} scale={0} />
        <mesh name="Cube017" geometry={nodes.Cube017.geometry} material={materials.input} position={[0.23, -0.71, -0.02]} rotation={[0, Math.PI / 4, 0]} scale={0} />
        <mesh name="Cube018" geometry={nodes.Cube018.geometry} material={materials.input} position={[-0.01, -0.57, -0.49]} rotation={[0, 1.08, 0]} scale={0} />
      </group>
    </group>
  )
}

useGLTF.preload('./neural_network.glb')
